eigen(data)
eigen(cor(data))
eigen(cor(data))$values
#2.
?cov
cov.m<-cov(data)# compute coovariance matrix
round(cov.m,digit=2) #see only two digits after the comma
max(diag(cov.m))
min(diag(cov.m))
cor.m<-cor(data)#compute the correlation matrix
round(cor.m,digit=2)
?princomp
pca<-princomp(data,cor=TRUE) #principal components analysis on the correlation matrix
pca
eigen(cor(data))$values
eigen(cor(data))$values.^0.5
(eigen(cor(data))$values)^0.5
#3.
str(pca)
summary(pca)
#4.
eigenval<-(pca$sdev)^2
D<-matrix(0,9,9)
diag(D)<-eigenval
D
#4.
eigenval<-(pca$sdev)^2
D<-matrix(0,9,9)
diag(D)<-eigenval
D
C <- pca$loadings
loadings <- C %*% sqrt(D)#component loadings
loadings
pca$loadings
# setting the working directory
setwd("/Users/samueleborsini/Library/Mobile Documents/com~apple~CloudDocs/Università/Economics and econometrics/II anno/Statistics for High Dimensional Data/Labs/lab2/Example1")
#1.
data<-read.table("eurojob.txt", header = FALSE) #import data
str(data) #data structure
head(data)
rownames(data) <- data$V1 #give to each row a name, corresponding to the values of the variable "country"
head(data)
data$V1<- NULL#delete variable country
head(data)
names(data)<-c("agriculture", "mining", "manufacture", "power", "construction", "service", "finance", "social", "transport")
#the command names give a name to each variable in the dataset
head(data)
#2.
?cov
cov.m<-cov(data)# compute coovariance matrix
round(cov.m,digit=2) #see only two digits after the comma
max(diag(cov.m))
min(diag(cov.m))
cor.m<-cor(data)#compute the correlation matrix
round(cor.m,digit=2)
?princomp
pca<-princomp(data,cor=TRUE) #principal components analysis on the correlation matrix
pca
#elements in pca:
# sdev = standard deviation of the PCs (i.e. the sqrts of the evals)
# loadigns = the matrix of evecs of S
# center = colMeans(data)
# scale = standard deviations of the data (no d.f. corrections, i.e. biased estimator)
# scores = the computed PCs
valus <- eigen(cov(data))$vecgtors
vec <- eigen(cov(data))$vectors
vec
vec_s <- eigen(cor(data))$vectors
val <- eigen(cov(data))$values
val_s <- eigen(cor(data))$values
val
val_s
summary(pca)
pca$loadings
vec_s
solve(sqrt(diag(val))) %*% vec
vec_s
vec%*%solve(sqrt(diag(val)))
pca$scores
# setting the working directory
setwd("/Users/samueleborsini/Library/Mobile Documents/com~apple~CloudDocs/Università/Economics and econometrics/II anno/Statistics for High Dimensional Data/Labs/lab2/Example1")
#1.
data<-read.table("eurojob.txt", header = FALSE) #import data
str(data) #data structure
head(data)
rownames(data) <- data$V1 #give to each row a name, corresponding to the values of the variable "country"
head(data)
data$V1<- NULL#delete variable country
head(data)
names(data)<-c("agriculture", "mining", "manufacture", "power", "construction", "service", "finance", "social", "transport")
#the command names give a name to each variable in the dataset
head(data)
#2.
?cov
cov.m<-cov(data)# compute coovariance matrix
round(cov.m,digit=2) #see only two digits after the comma
max(diag(cov.m))
min(diag(cov.m))
cor.m<-cor(data)#compute the correlation matrix
round(cor.m,digit=2)
?princomp
pca<-princomp(data,cor=TRUE) #principal components analysis on the correlation matrix
pca
#elements in pca:
# sdev = standard deviation of the PCs (i.e. the sqrts of the evals)
# loadigns = the matrix of evecs of S
# center = colMeans(data)
# scale = standard deviations of the data (no d.f. corrections, i.e. biased estimator)
# scores = the computed PCs
#3.
str(pca)
summary(pca)
?screeplot
screeplot(pca, npcs =9, type = c("lines"),ylim=c(0,4))
score
# setting the working directory
setwd("/Users/samueleborsini/Library/Mobile Documents/com~apple~CloudDocs/Università/Economics and econometrics/II anno/Statistics for High Dimensional Data/Labs/lab2/Example1")
#1.
data<-read.table("eurojob.txt", header = FALSE) #import data
str(data) #data structure
head(data)
rownames(data) <- data$V1 #give to each row a name, corresponding to the values of the variable "country"
head(data)
data$V1<- NULL#delete variable country
head(data)
names(data)<-c("agriculture", "mining", "manufacture", "power", "construction", "service", "finance", "social", "transport")
#the command names give a name to each variable in the dataset
head(data)
#2.
?cov
cov.m<-cov(data)# compute coovariance matrix
round(cov.m,digit=2) #see only two digits after the comma
max(diag(cov.m))
min(diag(cov.m))
cor.m<-cor(data)#compute the correlation matrix
round(cor.m,digit=2)
?princomp
pca<-princomp(data,cor=TRUE) #principal components analysis on the correlation matrix
pca
#elements in pca:
# sdev = standard deviation of the PCs (i.e. the sqrts of the evals)
# loadigns = the matrix of evecs of S
# center = colMeans(data)
# scale = standard deviations of the data (no d.f. corrections, i.e. biased estimator)
# scores = the computed PCs
#3.
str(pca)
summary(pca)
?screeplot
screeplot(pca, npcs =9, type = c("lines"),ylim=c(0,4))
# setting the working directory
setwd("/Users/samueleborsini/Library/Mobile Documents/com~apple~CloudDocs/Università/Economics and econometrics/II anno/Statistics for High Dimensional Data/Labs/lab2/Example1")
#1.
data<-read.table("eurojob.txt", header = FALSE) #import data
str(data) #data structure
head(data)
rownames(data) <- data$V1 #give to each row a name, corresponding to the values of the variable "country"
head(data)
data$V1<- NULL#delete variable country
head(data)
names(data)<-c("agriculture", "mining", "manufacture", "power", "construction", "service", "finance", "social", "transport")
#the command names give a name to each variable in the dataset
head(data)
#2.
?cov
cov.m<-cov(data)# compute coovariance matrix
round(cov.m,digit=2) #see only two digits after the comma
max(diag(cov.m))
min(diag(cov.m))
cor.m<-cor(data)#compute the correlation matrix
round(cor.m,digit=2)
?princomp
pca<-princomp(data,cor=TRUE) #principal components analysis on the correlation matrix
pca
#elements in pca:
# sdev = standard deviation of the PCs (i.e. the sqrts of the evals)
# loadigns = the matrix of evecs of S
# center = colMeans(data)
# scale = standard deviations of the data (no d.f. corrections, i.e. biased estimator)
# scores = the computed PCs
#3.
str(pca)
summary(pca)
?screeplot
#screeplot(pca, npcs =9, type = c("lines"),ylim=c(0,4))
pca$sdev^2 #eigenvalues
#4.
eigenval<-(pca$sdev)^2
D<-matrix(0,9,9)
diag(D)<-eigenval
D
C <- pca$loadings
loadings <- C %*% sqrt(D)#component loadings
#5.
stand.coeff<-loadings%*% diag(1/eigenval)#component score coefficients
?scale
data.s<-scale(data)#standardized data
score<-(data.s)%*%stand.coeff#individual's score on each component
score
cor(score)
cov(score)
cor(pca$scores)
setwd <- "/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal"
data <- read.table("ceosal1.txt", header = TRUE) #import data
setwd <- "/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal"
data <- read.table("ceosal2.dat", header = TRUE) #import data
setwd <- "/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal"
data <- read.table("ceosal2.dat") #import data
setwd <- "/Users/samueleborsini/Library/Mobile Documents/com~apple~CloudDocs/Università/Economics and econometrics/II anno/Statistics for High Dimensional Data/Project
data <- read.table("ceosal2.dat") #import data
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat") #import data
View(data)
data <- read.table("ceosal2.dat", header=TRUE) #import data
View(data)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
# drop selected columns
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
View(data)
pca <- prcomp(data, scale=TRUE) #principal component analysis
View(pca)
summary(pca) #print summary
loadings <- pca$rotation #loadings
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
pca <- prcomp(data, scale=TRUE) #principal component analysis
summary(pca) #print summary
loadings <- pca$rotation #loadings
loadings
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
pca <- prcomp(data, scale=FALSE) #principal component analysis
summary(pca) #print summary
loadings <- pca$rotation #loadings
loadings
cor <- cor(data) #correlation matrix
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- eigen(cor)$values #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
val
vec
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- eigen(cor)$values #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
pca <- prcomp(data, center=TRUE, scale=TRUE) #principal component analysis
pca$rotation
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- eigen(cor)$values #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
pca <- princomp(data, cor=TRUE) #principal component analysis
pca$loadings
View(data)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
means
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- eigen(cor)$values #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
vec
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- eigen(cor)$values #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
score_coef <- vec %*% solve(val)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- eigen(cor)$values #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
score_coef <- vec %*% solve(diag(val))
score_coeff
score_coef
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- eigen(cor)$values #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
score_coef <- vec %*% solve(val)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- diag(eigen(cor)$values) #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
score_coef <- vec %*% solve(val)
score_coef
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- diag(eigen(cor)$values) #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
score_coef <- vec %*% solve(sqrt(val))
score_coef
val
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
cor
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cor_m <- X %*% t(X)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/rows(X))*X %*% t(X)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/row(X))*X %*% t(X)
row(X)
nrows(X)
nrow(X)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)) * X %*% t(X)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)) * X %*% t(X)
cor_m <- cov2cor(cov_m)
cor_m <- diag(1/sqrt(diag(cov_m))) %*% cov_m %*% diag(1/sqrt(diag(cov_m))))
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)) * X %*% t(X)
cor_m <- cov2cor(cov_m)
cor_m <- diag(1/sqrt(diag(cov_m))) %*% cov_m %*% diag(1/sqrt(diag(cov_m)))
cor_m
X
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)) * t(X) %*% X
cor_m <- cov2cor(cov_m)
cor_m <- diag(1/sqrt(diag(cov_m))) %*% cov_m %*% diag(1/sqrt(diag(cov_m)))
cor_m
cor
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)) * t(X) %*% X
cor_m <- cov2cor(cov_m)
cor_m
cor_m <- diag(1/sqrt(diag(cov_m))) %*% cov_m %*% diag(1/sqrt(diag(cov_m)))
cor_m
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)) * t(X) %*% X
cov_,
cov_m
cov(data)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
#subtracting the mean of each column to each column
for (i in 1:ncol(X)){
X[,i] <- X[,i] - means[i]
}
colMeans(X)
a <- c(1,1,1,1,1,1,)
a <- c(1,1,1,1,1,1)
mean(a)
a-mean(a)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
#subtracting the mean of each column to each column
for (i in 1:ncol(X)){
X[,i] <- X[,i] - mean(X[,i])
}
colMeans(X)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
#subtracting the mean of each column to each column
for (i in 1:ncol(X)){
X[,i] <- X[,i] - mean(X[,i])
}
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)) * t(X) %*% X
cor_m <- cov2cor(cov_m)
cor
cor_m
cor-cor_M
cor-cor_m
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
#subtracting the mean of each column to each column
for (i in 1:ncol(X)){
X[,i] <- X[,i] - mean(X[,i])
}
cor <- cor(data) #correlation matrix
cov_m <- (1/nrow(X)-1) * t(X) %*% X
cor_m <- cov2cor(cov_m)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
X <-  as.matrix(data)
#subtracting the mean of each column to each column
for (i in 1:ncol(X)){
X[,i] <- X[,i] - mean(X[,i])
}
cor <- cor(data) #correlation matrix
cov_m <- (1/(nrow(X)-1)) * t(X) %*% X
cor_m <- cov2cor(cov_m)
cor_m
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- diag(eigen(cor)$values) #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
score_coef <- vec %*% sqrt(val)
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- diag(eigen(cor)$values) #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
rescaled_load <- vec %*% sqrt(val)
rescaled_load
val
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- diag(eigen(cor)$values) #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
vec
pca <- princomp(data, cor=TRUE) #principal component analysis
setwd("/Users/samueleborsini/Library/CloudStorage/GoogleDrive-sam.sb74@gmail.com/Il mio Drive/Stats project/Data/Ceosal")
data <- read.table("ceosal2.dat", header=TRUE) #import data
means <- colMeans(data)
data <- data[, c("salary","age","comtensq","ceotensq","sales","profits","mktval")]
cor <- cor(data) #correlation matrix
val <- diag(eigen(cor)$values) #eigenvalues
vec <- eigen(cor)$vectors #eigenvectors
vec
pca <- princomp(data, cor=TRUE) #principal component analysis
pca$loadings
